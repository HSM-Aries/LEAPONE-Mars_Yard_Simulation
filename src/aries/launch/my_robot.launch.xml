<launch>
  <!-- Paths -->
  <let name="urdf_path" value="$(find-pkg-share aries)/urdf/my_robot.urdf.xacro"/>
  <let name="rviz_config_path" value="$(find-pkg-share aries)/rviz/urdf_config.rviz"/>
  <let name="gazebo_config_path" value="$(find-pkg-share aries)/config/gazebo_bridge.yaml"/>
  <let name="gz_gui_config_path" value="$(find-pkg-share aries)/config/gz_gui_config.config"/>
  <let name="world_path" value="$(find-pkg-share aries)/worlds/marsyard.sdf"/>
  <arg name="aries_share" default="$(find-pkg-share aries)"/>
  
   <!-- spawn position (you can tweak these at launch time) -->
  <arg name="spawn_x" default="0.0"/>
  <arg name="spawn_y" default="0.0"/>
  <arg name="spawn_z" default="1.65"/>  <!-- start 1.65 m above terrain for marsyard-->

 
  <!-- Prefer GZ_SIM_RESOURCE_PATH for Gazebo Sim. You can prepend multiple dirs. -->
  <set_env
    name="GZ_SIM_RESOURCE_PATH"
    value="$(var aries_share)/models:$(var aries_share)/worlds:$(env GZ_SIM_RESOURCE_PATH '')" />


  <!-- Start Gazebo (server + GUI) with your world -->
  <include file="$(find-pkg-share ros_gz_sim)/launch/gz_sim.launch.py">
    <arg name="gz_args" value="$(var world_path)"/>
  </include>

  <!-- GUI for joints (optional) -->
  <!-- <node pkg="joint_state_publisher_gui" exec="joint_state_publisher_gui"/> -->

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" exec="robot_state_publisher" output="screen">
    <param name="robot_description" value="$(command 'xacro $(var urdf_path)')"/>
    <param name="use_sim_time" value="true"/>
  </node>

  <!-- Spawn robot from robot_description (use -name, not -entity) -->
  <node pkg="ros_gz_sim" exec="create" name="create" output="screen"
      args="-name aries --gui-config $(var gz_gui_config_path) -topic robot_description -allow_renaming true -x $(var spawn_x) -y $(var spawn_y) -z $(var spawn_z)">
  </node>
  <!-- Bridge topics using your YAML config -->
  <node pkg="ros_gz_bridge" exec="parameter_bridge" output="screen">
    <param name="config_file" value="$(var gazebo_config_path)"/>
  </node>

 
  <!-- mimic.py to keep rockers aligned -->
 

  <node pkg="aries" exec="virtual_differential" name="virtual_differential" output="screen">
    <param from="$(find-pkg-share aries)/config/virtual_differential.yaml"/>
  </node>


  

  <!-- RViz2 (optional) -->
  <node pkg="rviz2" exec="rviz2" output="screen" args="-d $(var rviz_config_path)">
    <param name="use_sim_time" value="true"/>
  </node>
</launch>
